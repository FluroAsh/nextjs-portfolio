name: Test Workflow

on:
  push:
    paths:
      - 'backend/**'
    branches:
      # - 'main'
      - 'update/docker-be'
  workflow_dispatch:

jobs:
  path_to_registry:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Create .env file
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> server/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> server/.env
          echo "APP_KEYS=${{ secrets.APP_KEYS }}" >> server/.env
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> server/.env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> server/.env
          echo "AWS_ACCESS_SECRET=${{ secrets.AWS_ACCESS_SECRET }}" >> server/.env
          echo "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> server/.env
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> server/.env
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> server/.env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> server/.env
          echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> server/.env
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker images using docker-compose
        run: |
          docker-compose -f server/docker-compose.yml build
          docker-compose -f server/docker-compose.yml push

      # - name: Build and push
      #   uses: docker/build-push-action@v6
      #   with:
      #     push: true
      #     tags: fluroash/strapi:latest
  # deploy:
  #   runs-on: ubuntu-22.04
  #   steps:
  #   # ssh
  #   # > docker pull fluroash/strapi:latest
  #   # > docker-compose down
  #   # > docker-compose up -d
